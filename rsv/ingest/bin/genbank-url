#!/usr/bin/env python3

from urllib.parse import urlencode
import yaml
from yaml import Loader

with open('config/config.yaml', 'r') as f:
    config = yaml.load(f, Loader=Loader)

    if config['rsv'] == 'B':
        taxonid = [208895]
    elif config['rsv'] == 'A':
        taxonid = [208893]

for i in taxonid:
    endpoint = "https://www.ncbi.nlm.nih.gov/genomes/VirusVariation/vvsearch2/"
    params = {
        # Search criteria
        'fq': [
            '{!tag=SeqType_s}SeqType_s:("Nucleotide")', # Nucleotide sequences (as opposed to protein)
            f'VirusLineageId_ss:({i})',                # NCBI Taxon id for RSV
        ],

        # Unclear, but seems necessary.
        'q': '*:*',

        # Response format
        'cmd': 'download',
        'dlfmt': 'csv',
        'fl': ','.join(
            ':'.join(names) for names in [
                # Pairs of (output column name, source data field).
                ('genbank_accession',       'id'),
                ('genbank_accession_rev',   'AccVer_s'),
                ('database',                'SourceDB_s'),
                ('strain',                  'Isolate_s'),
                ('region',                  'Region_s'),
                ('location',                'CountryFull_s'),
                ('collected',               'CollectionDate_s'),
                ('submitted',               'CreateDate_dt'),
                ('length',                  'SLen_i'),
                ('host',                    'Host_s'),
                ('isolation_source',        'Isolation_csv'),
                ('bioproject_accession',    'BioProject_s'),
                ('biosample_accession',     'BioSample_s'),
                ('sra_accession',           'SRALink_csv'),
                ('title',                   'Definition_s'),
                ('authors',                 'Authors_csv'),
                ('publications',            'PubMed_csv'),
                ('sequence',                'Nucleotide_seq'),
            ]
        ),

        # Stable sort with newest last so diffs work nicely.  Columns are source
        # data fields, not our output columns.
        'sort': 'SourceDB_s desc, CollectionDate_s asc, id asc',

        # This isn't Entrez, but include the same email parameter it requires just
        # to be nice.
        'email': 'hello@nextstrain.org',
    }
    query = urlencode(params, doseq = True, encoding = "utf-8")

    print(f"{endpoint}?{query}")
